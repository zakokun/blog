<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on 杂鱼君的博客</title>
    <link>http://localhost:1313/tags/golang/</link>
    <description>Recent content in golang on 杂鱼君的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 13 Apr 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go 语言中哪种字符串拼接的方式最高效?</title>
      <link>http://localhost:1313/2017/go-string-implode-diff-way/</link>
      <pubDate>Thu, 13 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2017/go-string-implode-diff-way/</guid>
      <description>&lt;p&gt;go 语言中字符串拼接有好几种方式,从最普通的&lt;code&gt;+&lt;/code&gt;拼接到&lt;code&gt;buffer&lt;/code&gt;字节缓冲都有.但是如果遇到大量的字符串拼接的情况,他们之间的性能差异还是需要注意的.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>通过带缓冲的channel来控制并发数</title>
      <link>http://localhost:1313/2017/goroutinue-number-control/</link>
      <pubDate>Sun, 19 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2017/goroutinue-number-control/</guid>
      <description>&lt;p&gt;最近和搜索的同事一起用 golang 重构他们的 Elasticsearch 客户端.在用 Goroutines 去异步更新索引的时候并发量太大导致 ES
进程挂掉的情况(真弱).因此在更新索引的时候考虑如何手动控制并发的协程数量.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>phper 学 golang --日期时间处理</title>
      <link>http://localhost:1313/2016/golang-time-package/</link>
      <pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2016/golang-time-package/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>